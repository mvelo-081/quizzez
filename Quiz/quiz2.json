{
    "title": "DSA & JCF Quiz 1",
    "questions": [
      {
        "question": "What is the worst-case time complexity of binary search on a sorted array?",
        "options": ["O(1)", "O(log n)", "O(n)", "O(n log n)"],
        "correctAnswer": 1
      },
      {
        "question": "Which data structure has O(1) average-time complexity for insertion, deletion, and lookup?",
        "options": ["ArrayList", "HashSet", "TreeSet", "LinkedList"],
        "correctAnswer": 1
      },
      {
        "question": "What is the time complexity of accessing an element at index i in an ArrayList?",
        "options": ["O(1)", "O(log n)", "O(n)", "O(n log n)"],
        "correctAnswer": 0
      },
      {
        "question": "Which Java Collection guarantees sorted order?",
        "options": ["HashSet", "TreeSet", "LinkedHashSet", "HashMap"],
        "correctAnswer": 1
      },
      {
        "question": "Which of the following is NOT part of the Java Collections Framework?",
        "options": ["Queue", "Deque", "Map", "Array"],
        "correctAnswer": 3
      },
      {
        "question": "What is the average-case time complexity of quicksort?",
        "options": ["O(n)", "O(n log n)", "O(n^2)", "O(log n)"],
        "correctAnswer": 1
      },
      {
        "question": "What is the worst-case time complexity of inserting into a HashMap?",
        "options": ["O(1)", "O(log n)", "O(n)", "O(n log n)"],
        "correctAnswer": 2
      },
      {
        "question": "Which Java interface provides the methods add(), remove(), and contains()?",
        "options": ["Set", "List", "Collection", "Map"],
        "correctAnswer": 2
      },
      {
        "question": "What is the time complexity of removing the first element in a LinkedList?",
        "options": ["O(1)", "O(log n)", "O(n)", "O(n log n)"],
        "correctAnswer": 0
      },
      {
        "question": "Which of the following allows duplicate elements?",
        "options": ["HashSet", "TreeSet", "ArrayList", "HashMap (keys)"],
        "correctAnswer": 2
      },
      {
        "question": "What is the space complexity of merge sort?",
        "options": ["O(1)", "O(n)", "O(log n)", "O(n log n)"],
        "correctAnswer": 1
      },
      {
        "question": "Consider the following code:\n```java\nList<Integer> list = new ArrayList<>();\nlist.add(1);\nlist.add(2);\nlist.add(3);\nSystem.out.println(list.get(1));\n```\nWhat is the output?",
        "options": ["1", "2", "3", "IndexOutOfBoundsException"],
        "correctAnswer": 1
      },
      {
        "question": "Which sorting algorithm is stable?",
        "options": ["QuickSort", "MergeSort", "HeapSort", "SelectionSort"],
        "correctAnswer": 1
      },
      {
        "question": "What is the amortized time complexity of adding an element to an ArrayList?",
        "options": ["O(1)", "O(log n)", "O(n)", "O(n log n)"],
        "correctAnswer": 0
      },
      {
        "question": "Which of the following operations is NOT allowed in a Set?",
        "options": ["Adding duplicate element", "Checking membership", "Iteration", "Removing element"],
        "correctAnswer": 0
      },
      {
        "question": "What is the worst-case time complexity of linear search?",
        "options": ["O(1)", "O(log n)", "O(n)", "O(n^2)"],
        "correctAnswer": 2
      },
      {
        "question": "Which Java collection maintains insertion order?",
        "options": ["HashMap", "TreeSet", "LinkedHashSet", "PriorityQueue"],
        "correctAnswer": 2
      },
      {
        "question": "What is the time complexity of poll() in a PriorityQueue?",
        "options": ["O(1)", "O(log n)", "O(n)", "O(n log n)"],
        "correctAnswer": 1
      },
      {
        "question": "Consider the code:\n```java\nMap<String, Integer> map = new HashMap<>();\nmap.put(\"A\", 1);\nmap.put(\"B\", 2);\nmap.put(\"A\", 3);\nSystem.out.println(map.get(\"A\"));\n```\nWhat is the output?",
        "options": ["1", "2", "3", "null"],
        "correctAnswer": 2
      },
      {
        "question": "Which of the following has O(log n) insertion and lookup complexity?",
        "options": ["HashMap", "TreeMap", "HashSet", "ArrayList"],
        "correctAnswer": 1
      }
    ]
  }
  