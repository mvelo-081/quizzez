{
    "title": "complexity analysis of sorting algorithms v1",
    "questions": [
      {
        "question": "What is the worst-case time complexity of QuickSort?",
        "correctAnswer": 3,
        "options": ["O(n log n)", "O(log n)", "O(n)", "O(n^2)", "O(n^3)"]
      },
      {
        "question": "What is the average-case time complexity of QuickSort?",
        "correctAnswer": 0,
        "options": ["O(n log n)", "O(n^2)", "O(log n)", "O(n)", "O(n log^2 n)"]
      },
      {
        "question": "What is the worst-case time complexity of MergeSort?",
        "correctAnswer": 2,
        "options": ["O(n)", "O(n^2)", "O(n log n)", "O(log n)", "O(n^3)"]
      },
      {
        "question": "What is the space complexity of MergeSort?",
        "correctAnswer": 1,
        "options": ["O(1)", "O(n)", "O(log n)", "O(n^2)", "O(n log n)"]
      },
      {
        "question": "Which sorting algorithm has the best average-case time complexity?",
        "correctAnswer": 4,
        "options": ["Selection Sort", "Bubble Sort", "Insertion Sort", "Counting Sort", "MergeSort"]
      },
      {
        "question": "Which sorting algorithm is NOT based on comparisons?",
        "correctAnswer": 0,
        "options": ["Counting Sort", "QuickSort", "MergeSort", "HeapSort", "Insertion Sort"]
      },
      {
        "question": "What is the time complexity of Counting Sort?",
        "correctAnswer": 3,
        "options": ["O(n log n)", "O(log n)", "O(n^2)", "O(n + k)", "O(n^3)"]
      },
      {
        "question": "Which sorting algorithm is stable by default?",
        "correctAnswer": 2,
        "options": ["HeapSort", "QuickSort", "MergeSort", "Selection Sort", "Shell Sort"]
      },
      {
        "question": "How many comparisons are needed in the best case of Bubble Sort?",
        "correctAnswer": 1,
        "options": ["O(n^2)", "O(n)", "O(log n)", "O(n log n)", "O(1)"]
      },
      {
        "question": "What is the best-case time complexity of Insertion Sort?",
        "correctAnswer": 4,
        "options": ["O(n log n)", "O(n^2)", "O(log n)", "O(n log^2 n)", "O(n)"]
      },
      {
        "question": "How many comparisons are required in the worst case of Selection Sort?",
        "correctAnswer": 0,
        "options": ["O(n^2)", "O(n log n)", "O(n)", "O(log n)", "O(1)"]
      },
      {
        "question": "Which sorting algorithm uses a heap data structure?",
        "correctAnswer": 3,
        "options": ["QuickSort", "MergeSort", "Selection Sort", "HeapSort", "Counting Sort"]
      },
      {
        "question": "What is the time complexity of HeapSort?",
        "correctAnswer": 1,
        "options": ["O(n^2)", "O(n log n)", "O(n)", "O(log n)", "O(n^3)"]
      },
      {
        "question": "Which algorithm performs the minimum number of swaps in the worst case?",
        "correctAnswer": 4,
        "options": ["Bubble Sort", "QuickSort", "Insertion Sort", "HeapSort", "Selection Sort"]
      },
      {
        "question": "Which sorting algorithm is considered in-place and has O(1) auxiliary space?",
        "correctAnswer": 2,
        "options": ["MergeSort", "Counting Sort", "HeapSort", "Radix Sort", "Bucket Sort"]
      },
      {
        "question": "What is the worst-case number of comparisons in MergeSort for n elements?",
        "correctAnswer": 1,
        "options": ["O(n)", "O(n log n)", "O(n^2)", "O(log n)", "O(n^3)"]
      },
      {
        "question": "Which sorting algorithm can be optimized using gap sequences?",
        "correctAnswer": 3,
        "options": ["QuickSort", "MergeSort", "Bubble Sort", "Shell Sort", "Counting Sort"]
      },
      {
        "question": "What is the time complexity of Radix Sort?",
        "correctAnswer": 2,
        "options": ["O(n^2)", "O(n log n)", "O(nk)", "O(log n)", "O(n^3)"]
      },
      {
        "question": "Which sorting algorithm has a worst-case time complexity of O(n^2) but is efficient for small arrays?",
        "correctAnswer": 4,
        "options": ["HeapSort", "MergeSort", "Radix Sort", "Counting Sort", "Insertion Sort"]
      },
      {
        "question": "Which algorithm divides the array around a pivot element?",
        "correctAnswer": 0,
        "options": ["QuickSort", "HeapSort", "MergeSort", "Selection Sort", "Shell Sort"]
      },
      {
        "question": "How many primitive operations does Selection Sort perform in the best case?",
        "correctAnswer": 2,
        "options": ["O(n)", "O(n log n)", "O(n^2)", "O(log n)", "O(1)"]
      },
      {
        "question": "Which sorting algorithm is often used in external sorting for large datasets?",
        "correctAnswer": 3,
        "options": ["HeapSort", "QuickSort", "Counting Sort", "MergeSort", "Shell Sort"]
      },
      {
        "question": "Which algorithm has the property of being adaptive (efficient on partially sorted data)?",
        "correctAnswer": 4,
        "options": ["HeapSort", "QuickSort", "Counting Sort", "MergeSort", "Insertion Sort"]
      },
      {
        "question": "What is the lower bound for comparison-based sorting algorithms?",
        "correctAnswer": 0,
        "options": ["O(n log n)", "O(n^2)", "O(log n)", "O(n)", "O(1)"]
      },
      {
        "question": "Which sorting algorithm uses a bucket distribution approach?",
        "correctAnswer": 1,
        "options": ["HeapSort", "Bucket Sort", "MergeSort", "Shell Sort", "Selection Sort"]
      }
    ]
  }
  